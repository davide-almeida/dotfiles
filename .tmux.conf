setw -g mouse on

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'dracula/tmux'
set -s default-terminal 'tmux-256color'

# dracula customizations
set -g @dracula-refresh-rate 10
set -g @dracula-show-flags true
set -g @dracula-plugins "cpu-usage ram-usage"
set -g @dracula-cpu-usage-colors "cyan dark_gray"
set -g @dracula-ram-usage-colors "dark_purple white"
set -g @dracula-show-left-icon smiley
set -g @dracula-show-powerline true

run '~/.tmux/plugins/tpm/tpm'

# keybind
set-option -g prefix C-a

# auto window rename
set-window-option -g automatic-rename

# rename window to pane current path
set-option -g status-interval 1
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# rename next window
# bind-key c command-prompt -p "Name of new window: " "new-window -n '%%'"

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# rename current window
bind-key C command-prompt -p "Rename window to:" "rename-window '%%'"

# easy reload config
bind-key R source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

unbind C-[
bind  C-[ copy-mode

# Update default binding of Enter to also use copy-pipe
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# vi: set ft=tmux :
# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# Create horizontal and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Create horizontal and vertical splits
bind-key V split-window -h -p 50 -c "#{pane_current_path}" \; select-pane -l
bind-key S split-window -p 50 -c "#{pane_current_path}" \; select-pane -l

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1
